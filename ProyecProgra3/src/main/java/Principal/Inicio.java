/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Principal;

import Class.ClsMatriz;
import Class.ClsOrden;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alexis
 */
public class Inicio extends javax.swing.JFrame {

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
   
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cargarequipos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaclubes = new javax.swing.JTable();
        actualizar = new javax.swing.JButton();
        equipo1 = new javax.swing.JComboBox<>();
        equipo2 = new javax.swing.JComboBox<>();
        result1 = new javax.swing.JTextField();
        result2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cargarequipos.setText("Cargar Equipos");
        cargarequipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarequiposActionPerformed(evt);
            }
        });

        tablaclubes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaclubes);

        actualizar.setText("Actualizar");
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(equipo1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(result1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(equipo2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(result2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cargarequipos, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cargarequipos, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(equipo1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(equipo2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(result1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(result2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

      ClsMatriz mt = new ClsMatriz();
    String[][] clubs;
    String[][] ordenar;

    private final int pos = 0;
    private final int name = 1;
    private final int j = 2;
    private final int pts = 3;
    private final int g = 4;
    private final int e = 5;
    private final int per = 6;
    private final int gf = 7;
    private final int gc = 8;
    private final int dfg = 9;
    
    
    public void cargadatos(String[][] matriz ){
        
        String[] indice={"POS" ,"CLUB" ,"J" ,"PTS" ,"G" ,"E" ,"P" ,"GF" ,"GC" ,"DG" };
        tablaclubes.setModel(new DefaultTableModel(matriz,indice));
        
    }
    
    
    private void cargarequiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarequiposActionPerformed

         clubs = mt.crearMatriz();
        for (int i = 0; i < clubs.length; i++) {
            equipo1.addItem(clubs[i][1]);
            equipo2.addItem(clubs[i][1]);
        }
        cargadatos(clubs);
        cargarequipos.setEnabled(false);
        equipo1.setEnabled(true);
        equipo2.setEnabled(true);
        result1.setEnabled(true);
        result2.setEnabled(true);
        actualizar.setEnabled(true);
        
    }//GEN-LAST:event_cargarequiposActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
      String club1 = "", club2 = "";
        int resultadoclub1 = 0, resultadoclub2 = 0;

        club1 = equipo1.getSelectedItem().toString();
        club2 = equipo2.getSelectedItem().toString();
        resultadoclub1 = Integer.parseInt(result1.getText());
        resultadoclub2 = Integer.parseInt(result2.getText());

       
        if (club1.equals(club2)) {
            JOptionPane.showMessageDialog(null, "Seleccionaste el Mismo Equipo - ERROR");
        } 
        else if (resultadoclub1 > resultadoclub2) {
            for (int i = 0; i < clubs.length; i++) {
                if (club1.equals(clubs[i][name])) {
                    clubs[i][j] = (Integer.parseInt(clubs[i][j]) + 1) + "";
                    clubs[i][pts] = (Integer.parseInt(clubs[i][pts]) + 3) + "";
                    clubs[i][g] = (Integer.parseInt(clubs[i][g]) + 1) + "";
                    clubs[i][gf] = (Integer.parseInt(clubs[i][gf]) + resultadoclub1) + "";
                    clubs[i][gc] = (Integer.parseInt(clubs[i][gc]) + resultadoclub2) + "";
                    clubs[i][dfg] = ((Integer.parseInt(clubs[i][gf]) - (Integer.parseInt(clubs[i][gc])))) + "";
                } else if (club2.equals(clubs[i][name])) {
                    clubs[i][j] = (Integer.parseInt(clubs[i][j]) + 1) + "";
                    clubs[i][per] = (Integer.parseInt(clubs[i][per]) + 1) + "";
                    clubs[i][gf] = (Integer.parseInt(clubs[i][gf]) + resultadoclub2) + "";
                    clubs[i][gc] = (Integer.parseInt(clubs[i][gc]) + resultadoclub1) + "";
                    clubs[i][dfg] = ((Integer.parseInt(clubs[i][gf]) - (Integer.parseInt(clubs[i][gc])))) + "";
                }
            }
        } 
        else if (resultadoclub1 < resultadoclub2) {
            for (int i = 0; i < clubs.length; i++) {
                if (club2.equals(clubs[i][name])) {
                    clubs[i][j] = (Integer.parseInt(clubs[i][j]) + 1) + "";
                    clubs[i][pts] = (Integer.parseInt(clubs[i][pts]) + 3) + "";
                    clubs[i][g] = (Integer.parseInt(clubs[i][g]) + 1) + "";
                    clubs[i][gf] = (Integer.parseInt(clubs[i][gf]) + resultadoclub2) + "";
                    clubs[i][gc] = (Integer.parseInt(clubs[i][gc]) + resultadoclub1) + "";
                    clubs[i][dfg] = ((Integer.parseInt(clubs[i][gf]) - (Integer.parseInt(clubs[i][gc])))) + "";
                } else if (club1.equals(clubs[i][name])) {
                    clubs[i][j] = (Integer.parseInt(clubs[i][j]) + 1) + "";
                    clubs[i][per] = (Integer.parseInt(clubs[i][per]) + 1) + "";
                    clubs[i][gf] = (Integer.parseInt(clubs[i][gf]) + resultadoclub1) + "";
                    clubs[i][gc] = (Integer.parseInt(clubs[i][gc]) + resultadoclub2) + "";
                    clubs[i][dfg] = ((Integer.parseInt(clubs[i][gf]) - (Integer.parseInt(clubs[i][gc])))) + "";
                }
            }
        }
    
        else{
             for (int i = 0; i < clubs.length; i++) {
                 if(club1.equals(clubs[i][name])){
                    clubs[i][j] = (Integer.parseInt(clubs[i][j]) + 1) + "";
                    clubs[i][pts] = (Integer.parseInt(clubs[i][pts]) + 1) + "";
                    clubs[i][g] = (Integer.parseInt(clubs[i][g]) + 1) + "";
                    clubs[i][gf] = (Integer.parseInt(clubs[i][gf]) + resultadoclub1) + "";
                    clubs[i][gc] = (Integer.parseInt(clubs[i][gc]) + resultadoclub2) + "";
                    clubs[i][dfg] = ((Integer.parseInt(clubs[i][gf]) - (Integer.parseInt(clubs[i][gc])))) + ""; 
                 }else if(club2.equals(clubs[i][name])){
                    clubs[i][j] = (Integer.parseInt(clubs[i][j]) + 1) + "";
                    clubs[i][pts] = (Integer.parseInt(clubs[i][pts]) + 1) + "";
                    clubs[i][per] = (Integer.parseInt(clubs[i][per]) + 1) + "";
                    clubs[i][gf] = (Integer.parseInt(clubs[i][gf]) + resultadoclub2) + "";
                    clubs[i][gc] = (Integer.parseInt(clubs[i][gc]) + resultadoclub1) + "";
                    clubs[i][dfg] = ((Integer.parseInt(clubs[i][gf]) - (Integer.parseInt(clubs[i][gc])))) + "";
                 }
             }
        }
        ClsOrden orden=new ClsOrden();
        ordenar=orden.ordenar(clubs);
        cargadatos(ordenar);
    }//GEN-LAST:event_actualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JButton cargarequipos;
    private javax.swing.JComboBox<String> equipo1;
    private javax.swing.JComboBox<String> equipo2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField result1;
    private javax.swing.JTextField result2;
    private javax.swing.JTable tablaclubes;
    // End of variables declaration//GEN-END:variables
}
